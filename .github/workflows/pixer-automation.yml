name: CI/CD Pipeline

on:
  push:
    branches: main

# jobs:
#   deploy:
#     runs-on: self-hosted

#     env:
#       IMAGE_NAME: pixer-app
#       IMAGE_TAG: latest
#       REGISTRY: docker.io

#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v4

#       - name: Run Trivy vulnerability scan
#         run: |
#           trivy image --exit-code 1 --severity HIGH,CRITICAL $REGISTRY/$IMAGE_NAME:$IMAGE_TAG || true

#       - name: Log in to Docker Hub
#         run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Build Docker image
#         run: |
#           docker build -t $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG .

#       - name: Push Docker image
#         run: |
#           docker push $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

#       - name: Stop and remove old container (if running)
#         run: |
#           if [ "$(docker ps -q)" ]; then
#               docker stop $(docker ps -q)
#           else
#               echo "No running containers to stop."
#           fi

#           # if [ "$(docker images -q)" ]; then
#           #   docker rmi $(docker images -q)
#           # else
#           #     echo "No images to remove."
#           # fi


          

        

#       - name: Run new container
#         run: |
#           docker run -d --name $IMAGE_NAME -p 5000:80 $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG




jobs:
  build:
    runs-on: self-hosted

    env:
      IMAGE_NAME: pixer-app
      IMAGE_TAG: latest
      REGISTRY: docker.io

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
            sudo apt-get update
            sudo apt-get install wget apt-transport-https gnupg lsb-release -y
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get update
            sudo apt-get install trivy -y
            
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG .

      - name: Run Trivy vulnerability scan
        run: |
          trivy image --format table --output trivy-scan-result.txt --severity HIGH,CRITICAL $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG || true    
      
      - name: Upload Trivy Scan Report
        uses: actions/upload-artifact@v4
        with:
            name: trivy-report
            path: trivy-scan-result.txt
      - name: Push Docker image
        run: |
          docker push $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

      - name: Stop and remove old container (if exists)
        run: |
          if [ "$(docker ps -q -f name=$IMAGE_NAME)" ]; then
              docker stop $IMAGE_NAME
          else
              echo "No running container named $IMAGE_NAME to stop."
          fi

          if [ "$(docker ps -aq -f name=$IMAGE_NAME)" ]; then
              docker rm $IMAGE_NAME
          else
              echo "No container named $IMAGE_NAME to remove."
          fi

      - name: Run new container
        run: |
          docker run -d --name $IMAGE_NAME -p 3000:80 $REGISTRY/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG
  notify-success:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send success email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: "✅ Build Successful - ${{ github.repository }}"
          to: phillipstack.co@gmail.com, taykeny94@gmail.com, emmaasoh@gmail.com 
          from: ${{ secrets.SMTP_USER }}
          body: |
            ✅ CI/CD pipeline build successful.
            Repo: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Run: ${{ github.run_id }}
            Commit: ${{ github.sha }}
  notify-failure:
    needs: build
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send failure email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: "❌ Build Failed - ${{ github.repository }}"
          to: phillipstack.co@gmail.com, taykeny94@gmail.com, emmaasoh@gmail.com
          from: ${{ secrets.SMTP_USER }}
          body: |
            ❌ CI/CD build FAILED!
            Repo: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Run: ${{ github.run_id }}
            Commit: ${{ github.sha }}
            Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}